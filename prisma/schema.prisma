generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model administrador {
  idAdministrador String    @id @default(uuid())
  nombre          String    @db.VarChar(25)
  apellido1       String    @db.VarChar(25)
  apellido2       String    @db.VarChar(25)
  usuario         usuario[]
}

model artistasaficionados {
  idArtista                    String                         @id @default(uuid())
  nombre                       String                         @db.VarChar(25)
  apellido1                    String                         @db.VarChar(25)
  apellido2                    String                         @db.VarChar(25)
  carrera                      String?                        @db.VarChar(50)
  anno                         Int?
  activo                       String                         @db.VarChar(5)
  premios                      Bytes?                         @db.Blob
  manifestacionidManifestacion String
  responsableidResponsable     String
  facultadid                   String
  facultad                     facultad                       @relation(fields: [facultadid], references: [id], onUpdate: Restrict, map: "FKArtistasAf154326")
  responsable                  responsable                    @relation(fields: [responsableidResponsable], references: [idResponsable], onUpdate: Restrict, map: "FKArtistasAf543529")
  manifestacion                manifestacion                  @relation(fields: [manifestacionidManifestacion], references: [idManifestacion], onUpdate: Restrict, map: "FKArtistasAf936665")
  artistasaficionados_trabajos artistasaficionados_trabajos[]
  usuario                      usuario[]

  @@index([facultadid], map: "FKArtistasAf154326")
  @@index([responsableidResponsable], map: "FKArtistasAf543529")
  @@index([manifestacionidManifestacion], map: "FKArtistasAf936665")
}

model artistasaficionados_trabajos {
  artistasAficionadosidArtista String
  trabajosidTrabajo            String
  trabajos                     trabajos            @relation(fields: [trabajosidTrabajo], references: [idTrabajo], onUpdate: Restrict, map: "FKArtistasAf889729")
  artistasaficionados          artistasaficionados @relation(fields: [artistasAficionadosidArtista], references: [idArtista], onUpdate: Restrict, map: "FKArtistasAf93177")

  @@id([artistasAficionadosidArtista, trabajosidTrabajo])
  @@index([trabajosidTrabajo], map: "FKArtistasAf889729")
  @@index([artistasAficionadosidArtista], map: "FKArtistasAf93177")
}

model eventos {
  idEvento              String                  @id @default(uuid())
  tipo                  String                  @db.VarChar(25)
  nombre                String                  @db.VarChar(25)
  institucion           String                  @db.VarChar(255)
  fecha                 DateTime                @db.DateTime(0)
  eventos_manifestacion eventos_manifestacion[]
}

model eventos_manifestacion {
  eventosidEvento              String
  manifestacionidManifestacion String
  manifestacion                manifestacion @relation(fields: [manifestacionidManifestacion], references: [idManifestacion], onUpdate: Restrict, map: "FKEventos_Ma312847")
  eventos                      eventos       @relation(fields: [eventosidEvento], references: [idEvento], onUpdate: Restrict, map: "FKEventos_Ma844416")

  @@id([eventosidEvento, manifestacionidManifestacion])
  @@index([manifestacionidManifestacion], map: "FKEventos_Ma312847")
  @@index([eventosidEvento], map: "FKEventos_Ma844416")
}

model facultad {
  id                  String                @id @default(uuid())
  nombre              String                @db.VarChar(255)
  artistasaficionados artistasaficionados[]
}

model manifestacion {
  idManifestacion       String                  @id @default(uuid())
  nombre                String                  @db.VarChar(25)
  genero                String                  @db.VarChar(25)
  artistasaficionados   artistasaficionados[]
  eventos_manifestacion eventos_manifestacion[]
  responsable           responsable[]
}

model noticiasculturales {
  id                       String      @id @default(uuid())
  titulo                   String      @db.VarChar(25)
  autor                    String      @db.VarChar(25)
  fecha_Publicacion        DateTime    @db.DateTime(0)
  responsableidResponsable String
  responsable              responsable @relation(fields: [responsableidResponsable], references: [idResponsable], onUpdate: Restrict, map: "FKNoticiasCu824988")

  @@index([responsableidResponsable], map: "FKNoticiasCu824988")
}

model responsable {
  idResponsable                 String                @id @default(uuid())
  nombre                        String                @db.VarChar(25)
  apellido1                     String                @db.VarChar(25)
  apellido2                     String                @db.VarChar(25)
  procedencia                   String                @db.VarChar(25)
  manifestacionidManifestacion2 String
  manifestacion                 manifestacion         @relation(fields: [manifestacionidManifestacion2], references: [idManifestacion], onUpdate: Restrict, map: "FKResponsabl466609")
  artistasaficionados           artistasaficionados[]
  noticiasculturales            noticiasculturales[]
  usuario                       usuario[]

  @@index([manifestacionidManifestacion2], map: "FKResponsabl466609")
}

model role {
  id      String    @id @default(uuid())
  tipo    String    @db.VarChar(25)
  usuario usuario[]
}

model trabajos {
  idTrabajo                    String                         @id @default(uuid())
  autor                        String                         @db.VarChar(25)
  titulo                       String                         @unique(map: "Titulo") @db.VarChar(255)
  anno                         Int                            @db.Year
  lugar_Obtenido               String?                        @db.VarChar(25)
  trabajos                     Bytes                          @db.Blob
  artistasaficionados_trabajos artistasaficionados_trabajos[]
}

model usuario {
  idUsuario                    String               @id @default(uuid())
  nombre                       String               @db.VarChar(25)
  correo                       String               @unique(map: "Correo") @db.VarChar(25)
  contrasena                   String               @db.VarChar(255)
  artistasAficionadosidArtista String?
  responsableidResponsable     String?
  administradoridAdministrador String?
  roleid                       String
  administrador                administrador?       @relation(fields: [administradoridAdministrador], references: [idAdministrador], onDelete: Restrict, onUpdate: Restrict, map: "FKUsuario10775")
  role                         role                 @relation(fields: [roleid], references: [id], onUpdate: Restrict, map: "FKUsuario183683")
  artistasaficionados          artistasaficionados? @relation(fields: [artistasAficionadosidArtista], references: [idArtista], onDelete: Restrict, onUpdate: Restrict, map: "FKUsuario842133")
  responsable                  responsable?         @relation(fields: [responsableidResponsable], references: [idResponsable], onDelete: Restrict, onUpdate: Restrict, map: "FKUsuario568733")

  @@index([administradoridAdministrador], map: "FKUsuario10775")
  @@index([roleid], map: "FKUsuario183683")
  @@index([artistasAficionadosidArtista], map: "FKUsuario842133")
  @@index([responsableidResponsable], map: "FKUsuario568733")
}
